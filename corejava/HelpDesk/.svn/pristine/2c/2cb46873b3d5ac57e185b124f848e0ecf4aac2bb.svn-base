package com.crmindz.bcjMay2017.Controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.crmindz.bcjMay2017.Model.LoginCredentails;
import com.crmindz.bcjMay2017.Model.TicketCreation;
import com.crmindz.bcjMay2017.Service.LoginService;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

@Controller
public class LoginController {
	String S = "S";
	String C = "C";
	String E = "E";
	@Autowired
	public LoginService loginservice;

	@RequestMapping(value = "/Login", method = RequestMethod.GET)
	public ModelAndView showLogin(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView model = new ModelAndView("Login", "LoginCredentails", new LoginCredentails());
		return model;

	}

	@RequestMapping("/LoginProcess")
	public ModelAndView loginProcess(HttpServletRequest request, HttpServletResponse response,
			@ModelAttribute("Login") LoginCredentails login, HttpSession session) {
		ModelAndView mav = null;
		String usertype = loginservice.validateUser(login);
		System.out.println(usertype);
		session.setAttribute("username", login.getUsername());
		session.setAttribute("usertype", usertype);
		if (usertype.equals(S)) {
			mav = new ModelAndView("StudentView");
			System.out.println("abc");
			return mav;
		}

		else if (usertype.equals(C)) {
			mav = new ModelAndView("StudentView");
			return mav;
		}

		else if (usertype.equals(E)) {
			mav = new ModelAndView("EmployeeView");
			return mav;
		}

		else if ("Username is incorrect!!!!".equals(usertype)) {
			mav = new ModelAndView("Login", "error", "Username is incorrect!!!!");
			return mav;
		}

		else {
			mav = new ModelAndView("Login", "error", "Password is incorrect!!!!");
			return mav;
		}

	}

	@RequestMapping("/GridServlet")
	public String Gridview(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws IOException {
		String username = (String) session.getAttribute("username");
		List<TicketCreation> lc = loginservice.gridView(username);
		Gson gson = new GsonBuilder().setPrettyPrinting().create();
		String jsonArray = gson.toJson(lc);
		System.out.println(jsonArray);
		String forward = "formData";
		request.setAttribute("formData", jsonArray);
		return forward;

	}

	@RequestMapping("/TicketManagement")
	public String ticketManagement(HttpServletRequest request, HttpServletResponse response, HttpSession session) {
		if (session.getAttribute("username") != null) {
			if (session.getAttribute("usertype").equals(S) || session.getAttribute("usertype").equals(C)) {
				return "StudentView";
			} else {
				return "EmployeeView";
			}
		}
		return "TicketManagement";
	}

	@RequestMapping("/LogOut")
	public ModelAndView logoutProcess(HttpServletRequest request, HttpServletResponse response, HttpSession session) {
		session.invalidate();
		ModelAndView mav = new ModelAndView("Login");
		return mav;
	}
}
